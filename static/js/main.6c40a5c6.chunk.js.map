{"version":3,"sources":["components/Navbar.js","components/TextForm.js","Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","htmlFor","defaultProps","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","class","value","onChange","event","console","log","target","style","background","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","my-3","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","components_Navbar","body","backgroundColor","src_Alert","components_TextForm","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.6c40a5c6.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\n// made function props\r\nconst Navbar = (props) => {\r\n    return (\r\n\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                 {/* made title bt props.title */}\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">Features</a>\r\n        </li> */}\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">Pricing</a>\r\n            </li> */}\r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n\r\n// P is small 'p'\r\n// as it is isRequred, and if it is not sent, then it shows error\r\nNavbar.propTypes={title: PropTypes.string.isRequired,\r\n                    aboutText: PropTypes.string.isRequired}\r\nNavbar.defaultProps={title: 'MyApp',\r\n                    aboutText: 'About'};","import React, {useState} from \"react\";\r\nconst TextForm = (props) => {\r\n\r\n  const handleUpClick=()=>{\r\n    let newText=text.toUpperCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to UpperCase\", \"success\")\r\n\r\n  }\r\n\r\n  const handleLoClick=()=>{\r\n    let newText=text.toLowerCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to LowerCase\", \"success\")\r\n\r\n  }\r\n\r\n  const handleDeClick=()=>{\r\n    let newText=('');\r\n    setText(newText)\r\n    props.showAlert(\"Text is Deleted\", \"success\")\r\n\r\n  }\r\n\r\n  // Copy Text\r\n  const handleCopy=()=>{\r\n    let text =document.getElementById('mybox')\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value)\r\n    props.showAlert(\"Text Copied!!\", \"success\")\r\n\r\n  }\r\n  \r\n  //\r\n  const handleReSpace=()=>{\r\n    console.log('Removed space')\r\n    let newText=text.split(/[ ]+/)\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"Space Removed\", \"success\")\r\n\r\n  }\r\n\r\n  const handleOnChange=(event)=>{\r\n    console.log(\"on change\")\r\n    setText(event.target.value);\r\n  }\r\n\r\n  // default value of text\r\nconst [text, setText]=useState('Enter Text Here');\r\n// to change text\r\n// setText(\"text changed\");\r\n  return (\r\n    <>\r\n    <div className=\"container\">\r\n        <h1>{props.heading}</h1>\r\n      <div class=\"form-group\">\r\n        <textarea\r\n          class=\"form-control\"\r\n          value={text}\r\n          onChange={handleOnChange} //handle event\r\n          id=\"mybox\"\r\n          style={{background: props.mode==='dark'?'grey':'white'}}\r\n          rows=\"5\"\r\n        ></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Convert to UPPERCASE</button>\r\n      <button className=\"btn btn-primary mx-2 my-2\" onClick={handleLoClick}>Convert to lowercase</button>\r\n      <button className=\"btn btn-primary mx-2 my-2\" onClick={handleDeClick}>Clear Text</button>\r\n      <button className=\"btn btn-primary mx-2 my-2\" onClick={handleCopy}>Copy Text</button>\r\n      <button className=\"btn btn-primary mx-2 my-2\" onClick={handleReSpace}>Remove Space</button>\r\n    </div>\r\n    <div className=\"container\" my-3>\r\n      <h1>Your Text Summary</h1>\r\n      <p>{text.split(\" \").length} words and {text.length} chars</p>\r\n      <p>{0.008* text.split(\" \").length} Minutes Read</p>\r\n      <h3>Preview</h3>\r\n      <p>{text}</p>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextForm;\r\n","import React from \"react\";\r\n\r\nconst Alert = (props) => {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1); \r\n    }\r\n  return (\r\n    props.alert &&\r\n    <div>\r\n      <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","\n\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './About';\nimport React, {useState} from 'react';\nimport Alert from './Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert]=useState(null);\n\n  const showAlert=(message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    }, 1500)\n  }\n\n\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor='grey'\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.title='ConVo-Dark'\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='#212529'\n      showAlert(\"Light mode has been enabled\", \"success\")\n\n    }\n  }\n  return (\n    <>\n    {/* title is made here */}\n{/* <Router> */}\n<Navbar title=\"ConVo\" aboutText=\"About\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/>\n<div className='container my-3'>\n    {/* <Routes> */}\n      {/* <Route exact path=\"/\" element={ */}\n      <TextForm showAlert={showAlert} heading=\"UPPERCASE Converter\" mode={mode}/>\n      {/* }> */}\n      {/* </Route>\n      <Route exact path=\"/about\" element={<About />}>\n      </Route>\n    </Routes> */}\n    </div>\n  {/* </Router> */}\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}